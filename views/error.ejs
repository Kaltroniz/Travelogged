<% layout('layouts/boilerplate')%>


 <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Error - <%= statusCode %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --error-400: #ff9f43;
            --error-404: #ff6b6b;
            --error-500: #f368e0;
            --error-403: #5f27cd;
            --error-401: #2e86de;
            --error-default: #54a0ff;
        }
        
        body {
            background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #f8f9fa;
            overflow-x: hidden;
            position: relative;
        }
        
        .error-container {
            max-width: 850px;
            margin: 5rem auto;
            animation: fadeIn 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .error-card {
            background: rgba(30, 35, 48, 0.92);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            overflow: hidden;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
            position: relative;
            z-index: 2;
        }
        
        .error-header {
            padding: 3rem 2rem 0;
            text-align: center;
        }
        
        .error-icon {
            font-size: 5.5rem;
            margin-bottom: 1.5rem;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.08); }
            100% { transform: scale(1); }
        }
        
        .status-code {
            font-size: 4.5rem;
            font-weight: 800;
            margin-bottom: 0.5rem;
            text-shadow: 0 3px 10px rgba(0,0,0,0.3);
        }
        
        .error-title {
            font-size: 2rem;
            font-weight: 600;
            margin-bottom: 1.5rem;
        }
        
        .error-body {
            padding: 1.5rem 2rem 3rem;
        }
        
        .error-message {
            background: rgba(255, 255, 255, 0.05);
            border-left: 4px solid;
            padding: 1.5rem;
            border-radius: 8px;
            font-size: 1.25rem;
            margin-bottom: 2.5rem;
            line-height: 1.6;
        }
        
        .error-description {
            margin-bottom: 2.5rem;
            color: #ced4da;
            line-height: 1.7;
            max-width: 700px;
            margin-left: auto;
            margin-right: auto;
        }
        
        .home-button {
            display: block;
            width: 100%;
            max-width: 300px;
            margin: 0 auto;
            padding: 1rem;
            border-radius: 50px;
            font-weight: 600;
            border: none;
            background: linear-gradient(45deg, #2e86de, #54a0ff);
            color: white;
            transition: all 0.3s;
            text-align: center;
            text-decoration: none;
            box-shadow: 0 5px 20px rgba(9, 132, 227, 0.4);
        }
        
        .home-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(9, 132, 227, 0.6);
            background: linear-gradient(45deg, #1e6fc1, #3a89ff);
        }
        
        .home-button i {
            margin-right: 10px;
        }
        
        .floating {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.05);
            animation: float 15s infinite linear;
            z-index: 1;
        }
        
        @keyframes float {
            0% { transform: translateY(0) translateX(0) rotate(0deg); opacity: 1; }
            100% { transform: translateY(-100vh) translateX(100px) rotate(360deg); opacity: 0; }
        }
        
        /* Status-specific styling */
        .error-400 .error-icon, 
        .error-400 .status-code,
        .error-400 .error-message { color: var(--error-400); }
        
        .error-404 .error-icon, 
        .error-404 .status-code,
        .error-404 .error-message { color: var(--error-404); }
        
        .error-500 .error-icon, 
        .error-500 .status-code,
        .error-500 .error-message { color: var(--error-500); }
        
        .error-403 .error-icon, 
        .error-403 .status-code,
        .error-403 .error-message { color: var(--error-403); }
        
        .error-401 .error-icon, 
        .error-401 .status-code,
        .error-401 .error-message { color: var(--error-401); }
        
        .error-default .error-icon, 
        .error-default .status-code,
        .error-default .error-message { color: var(--error-default); }
        
        /* Responsive adjustments */
        @media (max-width: 768px) {
            .error-container {
                margin: 2rem auto;
                padding: 0 1rem;
            }
            
            .error-header {
                padding: 2rem 1rem 0;
            }
            
            .status-code {
                font-size: 3.5rem;
            }
            
            .error-title {
                font-size: 1.7rem;
            }
            
            .error-icon {
                font-size: 4.5rem;
            }
            
            .error-body {
                padding: 1rem 1.25rem 2rem;
            }
            
            .error-message {
                font-size: 1.1rem;
                padding: 1.25rem;
            }
        }
    </style>
</head>
<body>
    <!-- Floating background elements -->
    <div id="floating-elements"></div>
    
    <div class="container error-container">
        <div class="error-card error-<%= statusCode %>">
            <div class="error-header">
                <div class="error-icon">
                    <% if(statusCode === 404) { %>
                        <i class="fas fa-map-marker-slash"></i>
                    <% } else if(statusCode === 500) { %>
                        <i class="fas fa-server"></i>
                    <% } else if(statusCode === 403) { %>
                        <i class="fas fa-ban"></i>
                    <% } else if(statusCode === 401) { %>
                        <i class="fas fa-user-lock"></i>
                    <% } else if(statusCode === 400) { %>
                        <i class="fas fa-exclamation-circle"></i>
                    <% } else { %>
                        <i class="fas fa-exclamation-triangle"></i>
                    <% } %>
                </div>
                <h1 class="status-code"><%= statusCode %></h1>
                <h2 class="error-title">
                    <% if(statusCode === 404) { %>
                        Page Not Found
                    <% } else if(statusCode === 500) { %>
                        Server Error
                    <% } else if(statusCode === 403) { %>
                        Access Forbidden
                    <% } else if(statusCode === 401) { %>
                        Unauthorized Access
                    <% } else if(statusCode === 400) { %>
                        Bad Request
                    <% } else { %>
                        An Error Occurred
                    <% } %>
                </h2>
            </div>
            
            <div class="error-body">
                <div class="error-message">
                    <%= message %>
                </div>
                
                <div class="error-description text-center">
                    <% if(statusCode === 404) { %>
                        The page you're looking for might have been removed, had its name changed, or is temporarily unavailable.
                    <% } else if(statusCode === 500) { %>
                        Our server encountered an internal error. Our team has been notified and we're working to fix it.
                    <% } else if(statusCode === 403) { %>
                        You don't have permission to access this resource. Please contact the administrator if you believe this is a mistake.
                    <% } else if(statusCode === 401) { %>
                        You need to be authenticated to access this resource. Please log in and try again.
                    <% } else if(statusCode === 400) { %>
                        The request could not be understood by the server due to malformed syntax.
                    <% } else { %>
                        An unexpected error occurred while processing your request. Please try again later.
                    <% } %>
                </div>
                
                <a href="/" class="home-button">
                    <i class="fas fa-home"></i> Return to Home
                </a>
            </div>
        </div>
    </div>

    <script>
        // Create floating background elements
        function createFloatingElements() {
            const container = document.getElementById('floating-elements');
            const count = 12;
            
            for (let i = 0; i < count; i++) {
                const element = document.createElement('div');
                element.classList.add('floating');
                
                // Random size
                const size = Math.random() * 120 + 30;
                element.style.width = `${size}px`;
                element.style.height = `${size}px`;
                
                // Random position
                element.style.left = `${Math.random() * 100}%`;
                element.style.top = `${Math.random() * 100}%`;
                
                // Random animation duration
                const duration = Math.random() * 20 + 15;
                element.style.animationDuration = `${duration}s`;
                
                // Random animation delay
                const delay = Math.random() * 5;
                element.style.animationDelay = `${delay}s`;
                
                container.appendChild(element);
            }
        }
        
        // Initialize when page loads
        window.addEventListener('load', createFloatingElements);
    </script>
</body>
</html>